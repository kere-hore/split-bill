name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.0)"
        required: true
        type: string
      release_notes:
        description: "Release notes"
        required: false
        type: string
        default: "Automated release"

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests and build
        run: |
          bun run lint
          bun run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL: /sign-in
          NEXT_PUBLIC_CLERK_SIGN_UP_URL: /sign-up
          NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: /dashboard
          NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: /dashboard
          SKIP_ENV_VALIDATION: true

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline --pretty=format:"- %s" HEAD~10..HEAD)
          else
            COMMITS=$(git log --oneline --pretty=format:"- %s" $LAST_TAG..HEAD)
          fi

          # Create changelog
          CHANGELOG="## What's Changed\n\n$COMMITS"

          # Add custom release notes if provided
          if [ -n "${{ github.event.inputs.release_notes }}" ]; then
            CHANGELOG="${{ github.event.inputs.release_notes }}\n\n$CHANGELOG"
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo -e "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
